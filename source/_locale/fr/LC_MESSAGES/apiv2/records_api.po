# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, OpenDataSoft
# This file is distributed under the same license as the OpenDataSoft Documentation package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-17 17:13+0100\n"
"PO-Revision-Date: 2016-04-20 07:34+0000\n"
"Last-Translator: benrict <benoit.richter@opendatasoft.com>\n"
"Language-Team: French (http://www.transifex.com/opendatasoft/documentation-5/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/apiv2/records_api.rst:2
msgid "Dataset Records APIs"
msgstr "APIs des Enregistrements"

#: ../../source/apiv2/records_api.rst:6
msgid "Record Lookup API"
msgstr ""

#: ../../source/apiv2/records_api.rst:8
msgid ""
"This API makes it possible to fetch an individual record using its "
"identifier (Record ID)."
msgstr ""

#: ../../source/apiv2/records_api.rst:10
msgid ""
"**API endpoint**: "
"``/api/v2/catalog/datasets/<DATASETID>/records/<RECORDID>``"
msgstr ""

#: ../../source/apiv2/records_api.rst:12 ../../source/apiv2/records_api.rst:42
msgid "**Query**"
msgstr ""

#: ../../source/apiv2/records_api.rst:17 ../../source/apiv2/records_api.rst:47
msgid "Parameter Name"
msgstr ""

#: ../../source/apiv2/records_api.rst:18 ../../source/apiv2/records_api.rst:48
msgid "Description"
msgstr "Description"

#: ../../source/apiv2/records_api.rst:19 ../../source/apiv2/records_api.rst:49
msgid "``datasetid``"
msgstr ""

#: ../../source/apiv2/records_api.rst:20 ../../source/apiv2/records_api.rst:50
msgid ""
"Part of the URL path. Identifier of the dataset. Example: "
"``http://opendata.paris.fr/api/v2/catalog/datasets/arbresremarquablesparis2011/``"
msgstr ""

#: ../../source/apiv2/records_api.rst:22
msgid "``recordid``"
msgstr ""

#: ../../source/apiv2/records_api.rst:23
msgid ""
"Part of the URL path. Identifier of the record. Example: "
"``http://opendata.paris.fr/api/v2/catalog/datasets/<DATASETID>/records/758885b5183fd28f14ecf39e44484fdccf/``"
msgstr ""

#: ../../source/apiv2/records_api.rst:25 ../../source/apiv2/records_api.rst:60
msgid "``vf``"
msgstr ""

#: ../../source/apiv2/records_api.rst:26
msgid ""
"Define a virtual field. This field is returned in ``virtual_field`` section "
"of the result."
msgstr ""

#: ../../source/apiv2/records_api.rst:27 ../../source/apiv2/records_api.rst:66
msgid "``pretty_print``"
msgstr ""

#: ../../source/apiv2/records_api.rst:28 ../../source/apiv2/records_api.rst:67
msgid ""
"If set to true (default is false), pretty prints JSON and JSONP outputs."
msgstr ""

#: ../../source/apiv2/records_api.rst:29 ../../source/apiv2/records_api.rst:68
msgid "``export_as``"
msgstr ""

#: ../../source/apiv2/records_api.rst:30 ../../source/apiv2/records_api.rst:69
msgid ""
"Export record to the specified format. One of json, csv, citadel, geojson, "
"xls or shapefile."
msgstr ""

#: ../../source/apiv2/records_api.rst:31 ../../source/apiv2/records_api.rst:70
msgid "``callback``"
msgstr ""

#: ../../source/apiv2/records_api.rst:32
msgid "JSONP callback. Example: ``format=jsonp&callback=myFunction``"
msgstr ""

#: ../../source/apiv2/records_api.rst:35
msgid "Record Search API"
msgstr ""

#: ../../source/apiv2/records_api.rst:37
msgid ""
"This API makes it possible to perform complex queries on the records of a "
"dataset, such as full-text search or geo search. It also provides faceted "
"search features on dataset records."
msgstr ""

#: ../../source/apiv2/records_api.rst:40
msgid "**API endpoint**: ``/api/v2/catalog/datasets/<DATASETID>/records``"
msgstr ""

#: ../../source/apiv2/records_api.rst:52
msgid "``q``"
msgstr ""

#: ../../source/apiv2/records_api.rst:53
msgid ""
"The full-text query. This parameter can be left empty, in which case no "
"full-text filtering on the result set occurs."
msgstr ""

#: ../../source/apiv2/records_api.rst:55
msgid "``sort``"
msgstr ""

#: ../../source/apiv2/records_api.rst:56
msgid ""
"Sorts results according to the specified field. By default, the sort is "
"descending (from the highest value to the smallest value). A minus sign "
"('-') may be used to perform an ascending sort. Sorting is only available on"
" numeric fields (int, double, date and datetime) and on text fields which "
"have the ``sortable``  annotation. Examples: ``sort=price`` , "
"``sort=-width``"
msgstr ""

#: ../../source/apiv2/records_api.rst:61
msgid ""
"Define a virtual field. This field is returned in ``virtual_field`` section "
"of the result. It can also be used in sort parameter."
msgstr ""

#: ../../source/apiv2/records_api.rst:62
msgid "``rows``"
msgstr ""

#: ../../source/apiv2/records_api.rst:63
msgid ""
"Number of results to return in a single call. -1 returns all values. By "
"default, 10 results are returned."
msgstr ""

#: ../../source/apiv2/records_api.rst:64
msgid "``start``"
msgstr ""

#: ../../source/apiv2/records_api.rst:65
msgid ""
"Index of the first result to return (starting at 0). To be used in "
"conjunction with \"rows\" to implement paging."
msgstr ""

#: ../../source/apiv2/records_api.rst:71
msgid ""
"JSONP or GeoJSONP callback. Example: ``format=jsonp&callback=myFunction``"
msgstr ""
